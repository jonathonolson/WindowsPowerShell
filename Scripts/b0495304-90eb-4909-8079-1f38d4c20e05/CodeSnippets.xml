<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <Code Content="Function Get-DiskDrive&#xD;&#xA;{&#xD;&#xA;  &lt;#&#xD;&#xA;   .Synopsis&#xD;&#xA;    This function returns capacity and freespace in gigs, and percent free&#xD;&#xA;   .Description&#xD;&#xA;    This function returns capacity and freespace in gigs, and percent free. By &#xD;&#xA;    default it returns the system drive (normally drive c:)&#xD;&#xA;   .Example&#xD;&#xA;    Get-DiskDrive&#xD;&#xA;    Returns capacity and free space in gigabytes. It also returns percent free,&#xD;&#xA;    and the drive letter and drive label of the system drive on the local machine.&#xD;&#xA;   .Example&#xD;&#xA;    Get-DiskDrive -drive e: -computer berlin&#xD;&#xA;    Returns capacity and free space in gigabytes of the e: drive. It also returns&#xD;&#xA;    percent free, and the drive letter and drive label of the system drive on the &#xD;&#xA;    remote machine named berlin.&#xD;&#xA;   .Example&#xD;&#xA;    Get-DiskDrive -drive e: -computer berlin, munich&#xD;&#xA;    Returns capacity and free space in gigabytes of the e: drive. It also returns&#xD;&#xA;    percent free, and the drive letter and drive label of the system drive on two &#xD;&#xA;    remote machines named berlin and munich.&#xD;&#xA;   .Example&#xD;&#xA;    Get-DiskDrive -drive c:, e: -computer berlin, munich&#xD;&#xA;    Returns capacity and free space in gigabytes of the C: and e: drive. It also &#xD;&#xA;    returns percent free, and the drive letter and drive label of the system drive &#xD;&#xA;    on two remote machines named berlin and munich.&#xD;&#xA;   .Example&#xD;&#xA;    &quot;c:&quot;,&quot;d:&quot;,&quot;f:&quot; | % { Get-DiskDrive $_ }&#xD;&#xA;    Returns information about c, d, and f drives on local computer. &#xD;&#xA;   .Example&#xD;&#xA;    Get-DiskDrive -d &quot;c:&quot;,&quot;d:&quot;,&quot;f:&quot;&#xD;&#xA;    Returns information about c, d, and f drives on local computer. Same command&#xD;&#xA;    as the previous example - but easier to read. But on my computer this is a &#xD;&#xA;    bit slower than the previous command (40 milliseconds).&#xD;&#xA;   .Parameter drive&#xD;&#xA;    The drive letter to query.  Defaults to system drive (normally c:)&#xD;&#xA;   .Parameter computername&#xD;&#xA;    The name of the computer to query. Defaults to local machine. &#xD;&#xA;   .Notes&#xD;&#xA;    NAME:  Example-&#xD;&#xA;    AUTHOR: ed wilson, msft&#xD;&#xA;    LASTEDIT: 06/02/2011 16:12:08&#xD;&#xA;    KEYWORDS:&#xD;&#xA;    HSG: HSG-06-26-2011&#xD;&#xA;   .Link&#xD;&#xA;    Http://www.ScriptingGuys.com/blog&#xD;&#xA; #Requires -Version 2.0&#xD;&#xA; #&gt;&#xD;&#xA; Param(&#xD;&#xA;  [string[]]$drive = $env:SystemDrive,&#xD;&#xA;  [string[]]$computername = $env:COMPUTERNAME&#xD;&#xA; ) #end param&#xD;&#xA; Foreach($d in $drive)&#xD;&#xA; {&#xD;&#xA;  Get-WmiObject -Class win32_Volume -ComputerName $computername -Filter &quot;DriveLetter = '$d'&quot; |&#xD;&#xA;  Select-object DriveLetter, Label, FileSystem, PageFilePresent, &#xD;&#xA;  @{Name = &quot;ComputerName&quot;; Expression = {$_.__Server} },&#xD;&#xA;  @{Name = &quot;Capacity(GB)&quot;; Expression = {$_.capacity / 1GB} }, &#xD;&#xA;  @{Name = &quot;FreeSpace(GB)&quot;; Expression = {$_.Freespace / 1GB} },&#xD;&#xA;  @{Name = &quot;PercentFree&quot;; Expression = { ($_.FreeSpace / $_.Capacity)*100 } }&#xD;&#xA; } # end foreach&#xD;&#xA; &#xD;&#xA;} #end function get-diskdrive" />
</CodeSnippets>